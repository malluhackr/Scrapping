import asyncio
import os
from playwright.async_api import async_playwright, Playwright, Route
from fastapi import FastAPI, HTTPException, Query
import uvicorn

# -------------------------------------------------------------------
# Playwright ‡¥¨‡µç‡¥∞‡µó‡¥∏‡µº ‡¥Ü‡¥™‡µç‡¥≤‡¥ø‡¥ï‡µç‡¥ï‡µá‡¥∑‡µª ‡¥§‡µÅ‡¥ü‡¥ô‡µç‡¥ô‡µÅ‡¥Æ‡µç‡¥™‡µã‡µæ ‡¥í‡¥∞‡µÅ ‡¥§‡¥µ‡¥£ ‡¥Æ‡¥æ‡¥§‡µç‡¥∞‡¥Ç ‡¥≤‡µã‡¥û‡µç‡¥ö‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥®‡µç‡¥®‡µÅ
# -------------------------------------------------------------------
playwright_instance: Playwright = None
browser = None

app = FastAPI(
    title="Advanced Scraper API",
    description="An intelligent scraping API that interacts with pages."
)

@app.on_event("startup")
async def startup_event():
    global playwright_instance, browser
    playwright_instance = await async_playwright().start()
    browser = await playwright_instance.firefox.launch()
    print("‚úÖ Advanced Playwright browser has been launched successfully.")

@app.on_event("shutdown")
async def shutdown_event():
    if browser: await browser.close()
    if playwright_instance: await playwright_instance.stop()
    print("üî• Advanced Playwright browser has been shut down.")

# -------------------------------------------------------------------
# ‡¥™‡µç‡¥∞‡¥ß‡¥æ‡¥®‡¥™‡µç‡¥™‡µÜ‡¥ü‡µç‡¥ü API ‡¥é‡µª‡¥°‡µç‚Äå‡¥™‡µã‡¥Ø‡¥ø‡¥®‡µç‡¥±‡µç
# -------------------------------------------------------------------
@app.get("/scrape")
async def scrape_video_details(url: str = Query(..., description="The URL of the video page to scrape")):
    if not browser:
        raise HTTPException(status_code=503, detail="Browser is not initialized.")
    
    context = await browser.new_context(
        user_agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
    )
    page = await context.new_page()

    captured_links = set()

    def handle_request(request):
        if any(ext in request.url for ext in [".m3u8", ".mp4", ".webm"]):
            captured_links.add(request.url)
    
    page.on("request", handle_request)

    try:
        await page.goto(url, timeout=60000, wait_until="networkidle")
        
        title = await page.title()

        # --- ‡¥á‡¥§‡¥æ‡¥£‡µç ‡¥™‡µÅ‡¥§‡¥ø‡¥Ø, ‡¥¨‡µÅ‡¥¶‡µç‡¥ß‡¥ø‡¥™‡¥∞‡¥Æ‡¥æ‡¥Ø ‡¥≠‡¥æ‡¥ó‡¥Ç ---
        # "download" ‡¥é‡¥®‡µç‡¥® ‡¥µ‡¥æ‡¥ï‡µç‡¥ï‡µÅ‡¥≥‡µç‡¥≥ ‡¥¨‡¥ü‡µç‡¥ü‡¥£‡µã ‡¥≤‡¥ø‡¥ô‡µç‡¥ï‡µã ‡¥ï‡¥£‡µç‡¥ü‡µÜ‡¥§‡µç‡¥§‡¥æ‡µª ‡¥∂‡µç‡¥∞‡¥Æ‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ
        download_button_selector = "button:has-text('Download'), a:has-text('Download')"
        
        try:
            # ‡¥Ö‡¥ô‡µç‡¥ô‡¥®‡µÜ‡¥Ø‡µä‡¥∞‡µÅ ‡¥¨‡¥ü‡µç‡¥ü‡µ∫ ‡¥â‡¥£‡µç‡¥ü‡µã ‡¥é‡¥®‡µç‡¥®‡µç 5 ‡¥∏‡µÜ‡¥ï‡µç‡¥ï‡µª‡¥°‡µç ‡¥®‡µã‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ
            await page.wait_for_selector(download_button_selector, timeout=5000)
            
            # ‡¥¨‡¥ü‡µç‡¥ü‡µ∫ ‡¥â‡¥£‡µç‡¥ü‡µÜ‡¥ô‡µç‡¥ï‡¥ø‡µΩ, ‡¥Ö‡¥§‡¥ø‡µΩ ‡¥ï‡µç‡¥≤‡¥ø‡¥ï‡µç‡¥ï‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥Ø‡µÅ‡¥®‡µç‡¥®‡µÅ
            await page.click(download_button_selector)
            print(f"üí° Clicked a download button on {url}")
            
            # ‡¥ï‡µç‡¥≤‡¥ø‡¥ï‡µç‡¥ï‡µç ‡¥ö‡µÜ‡¥Ø‡µç‡¥§ ‡¥∂‡µá‡¥∑‡¥Ç ‡¥≤‡¥ø‡¥ô‡µç‡¥ï‡µÅ‡¥ï‡µæ ‡¥µ‡¥∞‡¥æ‡µª 5 ‡¥∏‡µÜ‡¥ï‡µç‡¥ï‡µª‡¥°‡µç ‡¥ï‡µÇ‡¥ü‡¥ø ‡¥ï‡¥æ‡¥§‡µç‡¥§‡¥ø‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ
            await page.wait_for_timeout(5000)

        except Exception:
            # ‡¥°‡µó‡µ∫‡¥≤‡µã‡¥°‡µç ‡¥¨‡¥ü‡µç‡¥ü‡µ∫ ‡¥ï‡¥£‡µç‡¥ü‡µÜ‡¥§‡µç‡¥§‡¥ø‡¥Ø‡¥ø‡¥≤‡µç‡¥≤‡µÜ‡¥ô‡µç‡¥ï‡¥ø‡µΩ, ‡¥™‡µç‡¥∞‡¥∂‡µç‡¥®‡¥Æ‡¥ø‡¥≤‡µç‡¥≤, ‡¥Æ‡µÅ‡¥®‡µç‡¥®‡µã‡¥ü‡µç‡¥ü‡µç ‡¥™‡µã‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ
            print(f"‚ÑπÔ∏è No specific download button found on {url}. Proceeding anyway.")
            await page.wait_for_timeout(10000) # ‡¥∏‡¥æ‡¥ß‡¥æ‡¥∞‡¥£‡¥™‡µã‡¥≤‡µÜ 10 ‡¥∏‡µÜ‡¥ï‡µç‡¥ï‡µª‡¥°‡µç ‡¥ï‡¥æ‡¥§‡µç‡¥§‡¥ø‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ

    except Exception as e:
        raise HTTPException(status_code=500, detail=f"An error occurred: {str(e)}")
    finally:
        await page.close()
        await context.close()

    if not captured_links:
        # ‡¥í‡¥∞‡µÅ ‡¥≤‡¥ø‡¥ô‡µç‡¥ï‡µÅ‡¥Ç ‡¥ï‡¥ø‡¥ü‡µç‡¥ü‡¥ø‡¥Ø‡¥ø‡¥≤‡µç‡¥≤‡µÜ‡¥ô‡µç‡¥ï‡¥ø‡µΩ ‡¥í‡¥∞‡µÅ ‡¥é‡¥±‡µº ‡¥®‡µΩ‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ
        raise HTTPException(status_code=404, detail=f"Could not find any video links. The site might be protected or requires more interaction. Title found: '{title}'")

    return {
        "title": title,
        "qualities": list(captured_links)
    }

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 8000))
    uvicorn.run(app, host="0.0.0.0", port=port)
